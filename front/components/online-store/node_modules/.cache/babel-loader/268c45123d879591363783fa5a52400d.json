{"ast":null,"code":"var _jsxFileName = \"/home/mihail/Documents/portfolio_v2/front/components/online-store/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { observer } from \"mobx-react-lite\";\nimport { BrowserRouter } from 'react-router-dom';\nimport AppRouter from \"./components/AppRouter\";\nimport NavBar from \"./components/Navbar\";\nimport './styles/app.css';\nimport { useContext } from \"react\";\nimport { Context } from \".\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { check } from \"./http/userAPI\";\nimport { Spinner } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = _s(observer(_c = _s(() => {\n  _s();\n\n  const {\n    user\n  } = useContext(Context);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    check().then(data => {\n      user.setUser(true);\n      user.setIsAuth(true);\n    }).finally(() => setLoading(false));\n  }, []);\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Spinner, {\n      animation: \"border\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AppRouter, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}, \"eoNEOO0XgZmELjwcufg9rFYsGdc=\")), \"eoNEOO0XgZmELjwcufg9rFYsGdc=\");\n\n_c2 = App;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"App$observer\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","observer","BrowserRouter","AppRouter","NavBar","useContext","Context","useState","useEffect","check","Spinner","App","user","loading","setLoading","then","data","setUser","setIsAuth","finally"],"sources":["/home/mihail/Documents/portfolio_v2/front/components/online-store/src/App.js"],"sourcesContent":["import React from \"react\";\nimport { observer } from \"mobx-react-lite\";\nimport {BrowserRouter} from 'react-router-dom';\nimport AppRouter from \"./components/AppRouter\";\nimport NavBar from \"./components/Navbar\";\nimport './styles/app.css';\nimport { useContext } from \"react\";\nimport { Context } from \".\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { check } from \"./http/userAPI\";\nimport { Spinner } from \"react-bootstrap\";\n\nconst App = observer(() => {\n  const {user} = useContext(Context)\n  const [loading, setLoading] = useState(true)\n\n  useEffect(() => {\n    check().then(data => {\n      user.setUser(true)\n      user.setIsAuth(true)\n    }).finally(() => setLoading(false))\n  }, [])\n\n  if(loading){\n    return <Spinner animation=\"border\"/>\n  }\n\n  return (\n    <BrowserRouter>\n      <NavBar/>\n      <AppRouter/>\n    </BrowserRouter>\n  )\n});\n\nexport default App;\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,iBAAzB;AACA,SAAQC,aAAR,QAA4B,kBAA5B;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAO,kBAAP;AACA,SAASC,UAAT,QAA2B,OAA3B;AACA,SAASC,OAAT,QAAwB,GAAxB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,SAASC,OAAT,QAAwB,iBAAxB;;;AAEA,MAAMC,GAAG,MAAGV,QAAQ,SAAC,MAAM;EAAA;;EACzB,MAAM;IAACW;EAAD,IAASP,UAAU,CAACC,OAAD,CAAzB;EACA,MAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,IAAD,CAAtC;EAEAC,SAAS,CAAC,MAAM;IACdC,KAAK,GAAGM,IAAR,CAAaC,IAAI,IAAI;MACnBJ,IAAI,CAACK,OAAL,CAAa,IAAb;MACAL,IAAI,CAACM,SAAL,CAAe,IAAf;IACD,CAHD,EAGGC,OAHH,CAGW,MAAML,UAAU,CAAC,KAAD,CAH3B;EAID,CALQ,EAKN,EALM,CAAT;;EAOA,IAAGD,OAAH,EAAW;IACT,oBAAO,QAAC,OAAD;MAAS,SAAS,EAAC;IAAnB;MAAA;MAAA;MAAA;IAAA,QAAP;EACD;;EAED,oBACE,QAAC,aAAD;IAAA,wBACE,QAAC,MAAD;MAAA;MAAA;MAAA;IAAA,QADF,eAEE,QAAC,SAAD;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAMD,CArBmB,kCAAX,iCAAT;;MAAMF,G;AAuBN,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}